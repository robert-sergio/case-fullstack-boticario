generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model categoria {
  categoria_id        Int       @id @default(autoincrement())
  nome_categoria      String?   @db.VarChar(20)
  descricao_categoria String?   @db.VarChar(200)
  produto             produto[]
}

model cliente {
  cliente_id      Int       @id @default(autoincrement())
  email           String?   @db.VarChar(50)
  username        String?   @db.VarChar(15)
  senha           String?   @db.VarChar(20)
  nome            String?   @db.VarChar(200)
  cpf             String    @unique @db.VarChar(11)
  telefone        String?   @db.VarChar(11)
  data_nascimento DateTime? @db.Date
  endereco_id     Int
  pedido          pedido[]
}

model endereco {
  endereco_id Int     @id @default(autoincrement())
  cep         String? @db.VarChar(9)
  rua         String? @db.VarChar(100)
  bairro      String? @db.VarChar(30)
  cidade      String? @db.VarChar(30)
  numero      String? @db.VarChar(10)
  complemento String? @db.VarChar(100)
  uf          String? @db.VarChar(2)
}

model pedido {
  pedido_id          Int              @id @default(autoincrement())
  numero_pedido      Int?
  valor_total_pedido Decimal?         @db.Decimal
  data_pedido        DateTime         @default(now()) @db.Date
  status             Boolean?
  cliente_id         Int
  cliente            cliente          @relation(fields: [cliente_id], references: [cliente_id], onDelete: NoAction, onUpdate: NoAction)
  produto_pedido     produto_pedido[]
}

model produto {
  produto_id            Int              @id @default(autoincrement())
  nome_produto          String?          @db.VarChar(50)
  descricao_produto     String?          @db.VarChar(200)
  preco_produto         Decimal?         @db.Decimal
  qtd_estoque           Int?
  data_cadastro_produto DateTime?        @default(now()) @db.Date
  categoria_id          Int
  imagem                String?          @db.VarChar
  categoria             categoria        @relation(fields: [categoria_id], references: [categoria_id], onDelete: NoAction, onUpdate: NoAction)
  produto_pedido        produto_pedido[]
}

model produto_pedido {
  produto_pedido_id    Int      @id @default(autoincrement())
  qtd_produto_pedido   Int?
  preco_produto_pedido Decimal? @db.Decimal
  produto_id           Int?
  pedido_id            Int?
  pedido               pedido?  @relation(fields: [pedido_id], references: [pedido_id], onDelete: NoAction, onUpdate: NoAction)
  produto              produto? @relation(fields: [produto_id], references: [produto_id], onDelete: NoAction, onUpdate: NoAction)
}
